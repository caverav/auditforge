.editor {
    outline: none;
}

.editor-toolbar {
    display: flex;
    gap: 8px;
    margin-bottom: 8px;
}

.editor__content {
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
}

.ProseMirror {
    min-height: 200px;
    cursor: auto;
}

h1 {
    font-size: 4.25rem;
}

pre {
    padding: 0.7rem 1rem;
    border-radius: 5px;
    background: black;
    color: white;
    font-size: 0.8rem;
    overflow-x: auto;
    white-space: pre-wrap;
}

p code {
    padding: 0.2rem 0.4rem;
    border-radius: 5px;
    font-size: 0.8rem;
    font-weight: bold;
    background: rgba(black, 0.1);
    color: rgba(black, 0.8);
}

ul,
ol {
    padding-left: 1rem;
}

li > p,
li > ol,
li > ul {
    margin: 0;
}

a {
    color: inherit;
}

blockquote {
    border-left: 3px solid rgba(black, 0.1);
    color: rgba(black, 0.8);
    padding-left: 0.8rem;
    font-style: italic;
}

img {
    max-width: 100%;
    border-radius: 3px;
}

.selected {
    outline-style: solid;
    outline-color: blue;
}

table {
    border-collapse: collapse;
    table-layout: fixed;
    width: 100%;
    margin: 0;
    overflow: hidden;
}

td, th {
    min-width: 1em;
    border: 2px solid grey;
    padding: 3px 5px;
    vertical-align: top;
    box-sizing: border-box;
    position: relative;
}

th {
    font-weight: bold;
    text-align: left;
}

.selectedCell:after {
    z-index: 2;
    position: absolute;
    content: "";
    left: 0; right: 0; top: 0; bottom: 0;
    background: rgba(200, 200, 255, 0.4);
    pointer-events: none;
}

.column-resize-handle {
    position: absolute;
    right: -2px; top: 0; bottom: 0;
    width: 4px;
    z-index: 20;
    background-color: #adf;
    pointer-events: none;
}

.tableWrapper {
    margin: 1em 0;
    overflow-x: auto;
}

.resize-cursor {
    cursor: ew-resize;
    cursor: col-resize;
}

.is-active {
    color: green;
}

.is-active-highlight {
    background-color: grey;
}

.diffrem {
    background-color: #fdb8c0;
}

.diffadd {
    background-color: #acf2bd;
}

.text-negative .editor:not(.q-dark) {
    color: var(--q-color-primary) !important;
}

